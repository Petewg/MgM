                           ПОСТРОИТЕЛЬ СПИСКА ФУНКЦИЙ

НАЗНАЧЕНИЕ

Программа предназначена для создания списка процедур/функций, содержащихся в Harbour-программах. Создавалась в процессе ознакомления с дистрибутивом MiniGUI, поскольку в примерах встечалось использование функций, не описаных в документации. Возникла мысль единожды создать каталог, вместо многократных поисков FAR'ом в файлах дистрибутива.

Дополнительные возможности - простое форматирование исходного кода.


СОЗДАНИЕ СПИСКА

Для создания списка необходимо указать каталог, содержащий файлы PRG и C. В конце обработки программа попросит ввести наименование полученного списка, которое будет отображаться в заголовка главного окна и файл для сохранения.

В процессе обработки распознаются процедуры и функции, определённые операторами [STATIC] PROCEDURE, [STATIC] FUNCTION, HB_FUNC. Распознаётся и их сокращённое написание, например [STAT] PROC. Чисто С-функции (например, WORD DIBNumColors(LPSTR)), не используемые непосредственно в вызовах Harbour не распознаются.

Программа предназначалась для создания каталога функций в дистрибутиве MiniGUI, поэтому сортировка полученного списка ориентирована на пару файлов h_*.prg-c_*.c, например:

.........
h_btntextbox.prg
	_DefineBtnTextBox
	InitDialogBtnTextBox
c_btntextbox.c
	INITBTNTEXTBOX
	REDEFBTNTEXTBOX
h_button.prg
.........


ДЕЙСТВИЯ СО СПИСКОМ

- поиск выражения (настраивается в параметрах программы); выполняется с текущей позиции.
- поиск всех вхождений в списке искомого фрагмента (результат зависит от установленного в настройках режима). Применение - например, для выявления всех одноимённых процедур/функций.
- внесение комментариев в строку
- сохранение полученного списка в текстовый файл и загрузка из файла
- вызов внешнего редактора для обработки модуля (настраивается)


ФОРМАТИРОВАНИЕ ТЕКСТОВ ПРОГРАММ

В обработку попадают только файлы с расширением PRG, результирующие файлы размещаются в <каталог_проекта>\Stock.src.
В процессе оработки директивы компилятора #define, #command, #xcommand, #translate в результирующий файл переносятся "как есть".
Ключевые слова определяются в файлах Data\commands.lst и Data\Phrases.lst. Первый - список преобразуемых команд и функций, 2-й - составные команды (например, Copy structure).
Правила заполнения файлов ключевых слов:
- на каждое ключевое слово (выражение) отводится отдельная строка
- пустые строки игнорируются;
- строка комментария начинается символом ";" и также не обрабатывается;
- для подстановки в форматируемый файл слова в точно таком же виде, как задано в списке, слово следует начать со звёздочки ("*").

Пример.

commands.lst			Результат

ElseIf				elseif, Elseif, ELSEIF (в зависимости от установки изменения регистра)
*ElseIf				ElseIf (регистр не изменяется)


ТАБЛИЦА ВЫЗОВОВ ФУНЦИЙ

В таблицу попадают только доступные из всех файлов программы процедуры/функции (т.е. определённые как Procedure, Function, HB_FUNC).
Возможное применение - реорганизация структуры программы. Например, для выделения общих функций в отдельный процедурный файл.


НАСТРОЙКА

Языковые файлы можно редактировать с помощью INI File Editor из комплекта MiniGUI, нужно только расширение изменить.

"Действие при запуске"
	Селектор позволяет выбрать вариант запуска программы: с загрузкой последнего сохранённого списка или без.

"Поиск в списке"
	Установка режима поиска: точно соответствие или на вхождение фрагмента.

"Внешний редактор"
	В строке указывается внешний редактор для изменения программых модулей. Например, C:\Tools\PsPad\PsPad.exe. Дополнительно задаётся режим загрузки:

- "Открыть файл без условий"
	Программный файл просто открывается в заданной программе редактирования

- "Определить и передать номер строки %N"
	В редактор, кроме имени файла, передаётся номер строки, содержащей текущую процедуру. Параметр, соответсвующий параметру вызова редактора, указывается в поле напротив переключателя. Редактор должен поддерживать подобный вариант запуска. Для больших файлов это наиболее медленный способ.

Выражение %N используется программой для подстановки нужного значения.

Пример.

Формат вызова редактора PsPad в этом случае: PsPad <filename> /nnn. В поле имени редактора указывает <путь>PsPad.exe, селектор - в положение "Определить и передать номер строки %N" и в ставшем доступным поле напротив позиции вписываем /%N

Для редактора SciTe. Формат вызова: SciTE <filename> -goto:<nnn>. Задаём редактор <путь>SciTE.exe, и против позиции селектора: -goto:%N

- "Передать имя процедуры %P"
	Редактор дополнительно получает строку для поиска нужной процедуры.

Выражение %P используется программой для подстановки нужного значения.

Пример.

PsPad такого вызова не поддерживает, поэтому только для SciTE. Формат вызова SciTE <filename> -find:<sting>. Установить селектор в позицию "Передать имя процедуры %P", в ставшем доступным поле напротив переключателя вписать: -find:%P

Переход, правда, может быть не точным, поскольку функция может использоваться до её определения. Но поиск можно продолжить уже в редакторе.


ССЫЛКИ

PSPad http://www.pspad.com/en/pspad.htm
SciTE http://scite.ruteam.ru/
